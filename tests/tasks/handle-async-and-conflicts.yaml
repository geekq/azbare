- name: Naming conventions
  set_fact:
    storage_account_name1: storagetest1{{ lookup('password', '/dev/null chars=ascii_lowercase length=10') }}
    storage_account_name2: storagetest2{{ lookup('password', '/dev/null chars=ascii_lowercase length=10') }}

- name: Create virtual network with subnets
  geekq.azbare.resource:
    api_version: '2021-02-01'
    group: "{{ resource_group }}"
    path: /providers/Microsoft.Network/virtualNetworks/tst-network
    definition:
      location: "{{ azure_location }}"
      properties:
        addressSpace:
          addressPrefixes:
            - "10.0.0.0/8"
        subnets:
          - name: aks-nodes
            properties:
              addressPrefix: "10.0.1.0/24"
              privateEndpointNetworkPolicies: Enabled
              privateLinkServiceNetworkPolicies: Enabled
          - name: aks-pods
            properties:
              addressPrefix: "10.240.0.0/16"
              privateEndpointNetworkPolicies: Enabled
              privateLinkServiceNetworkPolicies: Enabled
              delegations:
                - name: aks-delegation
                  properties:
                    serviceName: Microsoft.ContainerService/managedClusters
          - name: ingress-public
            properties:
              addressPrefix: "10.0.2.0/24"
          - name: backend-services
            properties:
              addressPrefix: "10.0.5.0/24"
  register: vnet

- name: Try to create some invalid Postgres flexibleServer, that resource return errors asynchronously
  geekq.azbare.resource:
    group: "{{ resource_group }}"
    path: /providers/Microsoft.DBforPostgreSQL/flexibleServers/tst-pstgrs
    api_version: '2021-06-01'
    definition:
      location: "{{ azure_location }}"
      sku:
        name: Standard_B1ms
        tier: Burstable
      properties:
        administratorLogin: admin1
        administratorLoginPassword: foobar78$
        version: "13"
        storage:
          storageSizeGB: 32
        network:
          publicNetworkAccess: Disabled
          delegatedSubnetResourceId: "/subscriptions/{{ lookup('geekq.azbare.subscription_id') }}/resourceGroups/{{ resource_group }}/providers/Microsoft.Network/virtualNetworks/tst-network/subnets/backend-services"
          privateDnsZoneArmResourceId: /subscriptions/{{ lookup('geekq.azbare.subscription_id') }}/resourceGroups/{{ resource_group }}/providers/Microsoft.Network/privateDnsZones/foodnszone
        highAvailability:
          mode: Disabled
  ignore_errors: true
  register: async_invalid_subnet

- name: Previous command should fail, show error details but not show stack trace
  assert:
    that:
      - async_invalid_subnet is failed
      - async_invalid_subnet.error_response.error.code == 'OperationFailed'
      - ('missing required delegations' in async_invalid_subnet.error_response.error.message)

- name: Post to some random invalid url
  geekq.azbare.resource:
    group: "{{ resource_group }}"
    path: "/providers/Microsoft.Storage/storrrrageAccounts/{{ storage_account_name1 }}/listKeys?$expand=kerb"
    state: special-post
    api_version: '2021-04-01'
  ignore_errors: true
  register: some_invalid_resource

- name: Previous command should fail with 404 and not show stack trace
  assert:
    that:
      - some_invalid_resource is failed
      - some_invalid_resource.response.error.code == 'InvalidResourceType'

- name: Create a storage account and return immediately - force_async true
  geekq.azbare.resource:
    group: "{{ resource_group }}"
    path: "/providers/Microsoft.Storage/storageAccounts/{{ storage_account_name1 }}"
    force_async: true
    definition:
      sku:
        name: Standard_LRS
        tier: Standard
      kind: Storage
      name: "{{ storage_account_name1 }}"
      type: Microsoft.Storage/storageAccounts
      location: "{{ azure_location }}"
      properties:
        allowBlobPublicAccess: false

- name: Retrieve access key immediately after creating storage account
  geekq.azbare.resource:
    group: "{{ resource_group }}"
    path: "/providers/Microsoft.Storage/storageAccounts/{{ storage_account_name1 }}/listKeys?api-version=2021-04-01&$expand=kerb"
    state: special-post
  ignore_errors: true
  register: storage_account_keys

- debug: var=storage_account_keys

- name: Should fail with 409
  assert:
    that:
      - storage_account_keys is failed
      - storage_account_keys.response.error.code == 'StorageAccountIsNotProvisioned'

- name: Create a storage account waiting for completion (synchronous)
  geekq.azbare.resource:
    group: "{{ resource_group }}"
    path: "/providers/Microsoft.Storage/storageAccounts/{{ storage_account_name2 }}"
    definition:
      sku:
        name: Standard_LRS
        tier: Standard
      kind: Storage
      name: "{{ storage_account_name2 }}"
      type: Microsoft.Storage/storageAccounts
      location: "{{ azure_location }}"
      properties:
        allowBlobPublicAccess: false

- name: Delete the storage account at the end
  geekq.azbare.resource:
    group: "{{ resource_group }}"
    path: "/providers/Microsoft.Storage/storageAccounts/{{ item }}"
    state: absent
  loop:
    - storage_account_name1
    - storage_account_name2
